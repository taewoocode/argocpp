#include<bits/stdc++.h>
using namespace std;
const int n = 4;
int main(){
    string a[n] = {"사과", "딸기", "포도", "배"};
    for(int i = 0; i < (1 << n); i++){ //ex) n이 만약 3이라면 2의 3승 즉 8가지가 되고, 위는 4이기 때문에 16이 경우의 수가 된다.
        string ret = "";
        cout << i << " : ";
        for(int j = 0; j < n; j++){
            if(i & (1 << j)){
                ret += (a[j] + " ");
            }
        }
        cout << ret << '\n';
    }
    return 0;
}
/*
if(i & (1 << j)) 구문은 i의 j번째 비트가 켜져 있는지(즉, 1인지)를 확인합니다. 
만약 i의 j번째 비트가 켜져 있으면 ret에 a[j]를 포함시키고, 켜져 있지 않다면 포함시키지 않습니다.
이 코드를 통해 특정 원소들을 포함하는 부분집합을 생성하는 방식입니다. 
예를 들어, 주어진 원소 배열 a에서 각 원소는 비트마스크 i에 따라 선택됩니다. 
i의 각 비트는 배열 a의 각 원소에 대응되며, 해당 비트가 1이면 그 원소가 부분집합에 포함됩니다.
*/